Exo 1 : Vu en cours les enum, element séparer d'une virgule : enum Message {Quit,Echo, Move,ChangeColor,}

Exo 2 : Ajout des element dans enum avec les valeurs utilisées dans la suite du programme : 

        enum Message { 
            Move { x: 10, y: 30 },
            Echo("hello world"),
            ChangeColor(200, 255, 255), 
            Quit,}
  
        ERROR -> expexted type /// Verif doc enum du README --> Changement des valeurs vers le type i32 

        enum Message { 
            Move { x: i32, y: i32 },
            Echo("hello world"),
            ChangeColor(i32, i32, i32), 
            Quit,}

        ERROR -> expexted type /// Changement des valeurs vers le type string

        enum Message { 
            Move { x: i32, y: i32 },
            Echo(String),
            ChangeColor(i32, i32, i32), 
            Quit,}                                                      ---> ça fonctionne !! 

Exo 3 : Au vu des state.process et des assert_eq à la fin, l'enum est la même ormis Move qui prend maintenant la structure Point

        enum Message {
            ChangeColor(u8, u8, u8),
            Quit,
            Echo(String),
            Move(Point),}

        ERROR -> expexted type, ChangeColor est en u8 dans la suite du code, donc je le change dans enum :  ChangeColor(u8, u8, u8)
                ça compile mais fail le test  
                Lors du test il reset les info des variables, ensuite les initialise avec state.process et les compares
      
        Il y a un cas similaire à ce que demande le todo dans la doc eet sur 
        Il faut faire un match message pour chacun des cas possible, en appelant les valeurs leurs correspondant 
        x, y, z dans fn ChangeColor // s dans fn Echo // p dans fn move_position// 
        Ensuite chacun appel la fonction correspondante

        match message {
            Message::ChangeColor(x, y, z) => self.change_color((x,y,z)),
            Message::Quit => self.quit(),
            Message::Echo(s) => self.echo(s),  
            Message::Move(p) => self.move_position(p),                  }    --> ça fonctionne !
